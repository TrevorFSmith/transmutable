import logging
import traceback

ADMINS = ( ('Your Name', 'your_email@somedomainyouown.com'), )
MANAGERS = ADMINS

SECRET_KEY = 'a secret'

PRODUCTION = False
DEBUG = True
TEMPLATE_DEBUG = DEBUG

OPEN_REGISTRATION = True
OPEN_INVITE_REQUEST = False
OPEN_INVITE = True

PRIVACY_POLICY_URL = None # Or a URL to the site's privacy policy
TERMS_OF_SERVICE_URL = None # Or a URL to the site's terms of service
DEFAULT_HELP_URL = None # Or a URL to a help page.  If non-None, a Help link will appear in the top bar

#CACHE_BACKEND = 'dummy:///'
CACHE_BACKEND = 'locmem:///'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'transmutable',
        'USER': 'postgres',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
    }
}

#GOOGLE_AD_SETTINGS = {
#	'user_public_top': { 'ad_client':'CLIENT ID', 'ad_slot':'SLOT ID' },
#	'namespace_left': { 'ad_client':'CLIENT ID', 'ad_slot':'SLOT ID' },
#	'wiki_left': { 'ad_client':'CLIENT ID', 'ad_slot':'SLOT ID' },
#}
#GOOGLE_ANALYTICS_ACCOUNT = 'ACCOUNT ID'


DEFAULT_FROM_EMAIL = "someaddress@gmail.com"
EMAIL_HOST = "smtp.nothing.com"
EMAIL_HOST_PASSWORD = "12344321"
EMAIL_HOST_USER = "someaddress@gmail.com"
EMAIL_USE_TLS = True
EMAIL_PORT = 587

class ExceptionFormatter(logging.Formatter):
	def formatException(self, exc_info):
		exc_type, val, tb = exc_info
		init_formatted = traceback.format_exception(exc_type, val, tb)
		init_formatted = map(lambda x: x.replace('\n', ' '), init_formatted)
		init_formatted = map(lambda x: x.strip(), init_formatted)
		limit = 0
		formatted = None
		while formatted is None or len(formatted) > 2000:
			formatted = init_formatted[limit:]
			formatted = ' | '.join(formatted)
			limit += 5
		return formatted

LOGGING = {
	'version': 1,
	'formatters': {
		'verbose': {
			'format': '%(module)s:%(levelname)s pid:%(process)d tid:%(thread)d %(message)s'
			'()': 'local_settings.ExceptionFormatter'
		},
		'simple': {
			'format': '%(levelname)s %(message)s BOO'
		},
	},
	'handlers': {
		'syslog':{
			'address': '/dev/log',
			'class': 'logging.handlers.SysLogHandler',
			'formatter':'verbose',
			# 'address':('logs.papertrailapp.com', 11111)
		}
	},
	'loggers': {
		'': {
			'handlers': ['syslog'],
			'level': 'DEBUG',
		}
	}
}

logging.getLogger('').setLevel('DEBUG')
logging.getLogger('django.db.backends').setLevel('WARNING')
logging.getLogger('south').setLevel('WARNING')
